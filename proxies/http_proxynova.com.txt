document.write(".301".split("").reverse().join("").concat([58,51,47,50,54,52,47,51,53].map((code) => String.fromCharCode(code-1)).join(""))):8137
document.write("45.224.149.".repeat(3).substring(22).concat("901".split("").reverse().join(""))):999
document.write("54".split("").reverse().join("").concat(".174.80.83".repeat(1).substring(0))):20183
document.write(".1103.172.".substring(3-1, 8+2).concat("120.219".repeat(3).substring(14))):9999
document.write("5103.171.245.5".substring(2-1, 15-2).concat("101011".substring(0+0, 1+2))):1080
document.write([51,50,53,48,52,54,57,48,52,53,48,52,51].map((code) => String.fromCharCode(code-2)).join("").concat("3".split("").reverse().join(""))):1111
document.write("103.105.53".repeat(2).substring(10).concat([52,55,55,54].map((code) => String.fromCharCode(code-6)).join(""))):7777
document.write([59,49,53,52,56].map((code) => String.fromCharCode(code-3)).join("").concat([54,57,58,54,57,56,59].map((code) => String.fromCharCode(code-8)).join(""))):1080
document.write("6.69.071.301".split("").reverse().join("").concat([59].map((code) => String.fromCharCode(code-7)).join(""))):8090
document.write([50,49].map((code) => String.fromCharCode(code-1)).join("").concat("1.551.561.3".split("").reverse().join("")).concat("455".substring(0+0, 4-2))):8080
document.write("18.220.204.2151.2.5".substring(0+1, 20-6)):90
document.write("1103.169.18183.691".substring(2-1, 19-8).concat("7.35".repeat(2).substring(4))):6080
document.write(atob("NzYuNTAuODAu").concat(atob("MzI="))):8182
document.write(".54".split("").reverse().join("").concat("8.765.137.2188.71.15".substring(1+2, 26-13))):999
document.write(atob("MzkuMTA0LjI=").concat("8977.89897".substring(3+0, 12-5))):8001
document.write("2.821.832.74".split("").reverse().join("").concat("44646".substring(2-1, 2+1))):41451
document.write("188.112.1".repeat(2).substring(9).concat("79".repeat(1).substring(0)).concat([48,52,50,54].map((code) => String.fromCharCode(code-2)).join(""))):80
document.write("..022104.5233130.245.32.202..022104.52".substring(26-13, 20+7)):80
document.write("203.115.".repeat(3).substring(16).concat("15.101".split("").reverse().join(""))):82
document.write("179.3".substring(0+0, 4+1).concat([58,54,62,58].map((code) => String.fromCharCode(code-8)).join("")).concat(atob("LjEyNw=="))):999
document.write("0103.".substring(1+0, 9-4).concat("166".substring(0+0, 1+1)).concat(atob("OS4=")).concat([58,56,51,54,58,55].map((code) => String.fromCharCode(code-5)).join(""))):8080
document.write("511.15.112.8".split("").reverse().join("")):5060
document.write("9.92.622.44".split("").reverse().join("").concat("99".substring(0+0, 1+0))):1080
document.write(atob("MTgxLjIw").concat([58,47,57,51,47].map((code) => String.fromCharCode(code-1)).join("")).concat("911".substring(0+0, 4-2))):1994
document.write("0.31103.0.".substring(3+1, 15-7).concat("48.71.1261.7281".substring(0+0, 10-1))):83
document.write([58,64].map((code) => String.fromCharCode(code-9)).join("").concat(".93.7".split("").reverse().join("")).concat(atob("MTM5Lg==")).concat("41".split("").reverse().join(""))):9999
document.write("103.15".repeat(1).substring(0).concat(atob("Ni4xNDEuMTcy"))):8081
document.write("32.1103.163.23132.1316.31".substring(2+2, 20-5).concat("0.1060".substring(1+0, 8-3))):3127
document.write("103.70...7100".substring(0+0, 5+2).concat(atob("MTcwLjE2Mw=="))):8080
document.write("1689.116.161.8".substring(1+1, 14-5).concat("34.11313.3".substring(0+0, 5+1))):80
document.write("1.311.732.74".split("").reverse().join("").concat("191".substring(0+0, 3-1))):80
document.write(".8188181.188.81881".substring(6-1, 10+2).concat("23..23".substring(1+2, 3+3)).concat([58,48].map((code) => String.fromCharCode(code-2)).join("")).concat([56,59].map((code) => String.fromCharCode(code-7)).join("")).concat("888".substring(1+0, 2+0))):999
document.write(".8".split("").reverse().join("").concat(atob("MjIxLjE0MS44OA=="))):8081
document.write(".171514117.54.1.1".substring(9-2, 7+8).concat("9714.979".substring(2+0, 14-7))):80
document.write("3108103.78.201.3108".substring(6-2, 23-8).concat([52,54,52].map((code) => String.fromCharCode(code-2)).join(""))):5001